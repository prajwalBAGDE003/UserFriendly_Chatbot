//app.jsx import React, { useState } from 'react'; import './App.css'; import axios from 'axios'; import { useMediaQuery } from "react-responsive"; // Error Boundary Component class ErrorBoundary extends React.Component { constructor(props) { super(props); this.state = { hasError: false }; } static getDerivedStateFromError(error) { return { hasError: true }; } componentDidCatch(error, errorInfo) { console.error("Error caught by boundary:", error, errorInfo); } render() { if (this.state.hasError) { return <h1>Something went wrong.</h1>; } return this.props.children; } } // Main App Component function App() { const [question, setQuestion] = useState(""); const [answer, setAnswer] = useState(""); const isMobile = useMediaQuery({ query: "(max-width: 768px)" }); async function generateAnswer() { setAnswer("Loading..."); try { const response = await axios.post( "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyBsFKZuhyFga4ilm8ddNHu-LHS0_cq6g54", { contents: [ { parts: [{ text: question }] } ] } ); setAnswer(response.data.candidates[0].content.parts[0].text); } catch (error) { console.error("Error fetching answer:", error); setAnswer("Failed to generate answer. Try again."); } } async function removeAnswer() { setAnswer(""); // Clears the answer } return ( <> <h1>ðŸ’¬ChatMate</h1> <textarea value={question} onChange={(e) => setQuestion(e.target.value)} cols="30" rows="10" placeholder='Ask Anyting...' ></textarea> <br /> <button onClick={generateAnswer}style={{ marginLeft: "0px", backgroundColor: "red", color: "white" }}>Generate Answer</button> <button onClick={removeAnswer} style={{ marginLeft: "10px", backgroundColor: "red", color: "white" }}>Delete Answer</button> <pre>{answer}</pre> </> ); } // Wrap App in ErrorBoundary export default function WrappedApp() { return ( <ErrorBoundary> <App /> </ErrorBoundary> ); } //app.css .chat-container { text-align: center; max-width: 600px; margin: auto; padding: 20px; background: #f9f9f9; border-radius: 10px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); } h1 { color: #333; font-size: 24px; } .question-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 5px; font-size: 16px; } .button-group { margin-top: 10px; } .btn { padding: 8px 15px; font-size: 16px; border: none; cursor: pointer; border-radius: 5px; margin: 5px; } .generate { background-color: #4CAF50; color: white; } .delete { background-color: #f44336; color: white; } .answer-box { margin-top: 20px; padding: 10px; background: #fff; border-radius: 5px; border: 1px solid #ddd; font-size: 16px; }